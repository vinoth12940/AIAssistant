analyze_query_task:
  description: >
    Analyze the user's query: "{topic}"
    Determine what type of response is needed:
    1. If it's a knowledge base query (about customers, products, or documentation)
    2. If it needs web search (current events, general information)
    3. If it's a coding question
    4. If it's just a normal conversation
    Provide your analysis and recommendation for how to handle the query.
  expected_output: >
    A clear analysis of the query type and recommended action,
    formatted as markdown with the decision and reasoning.
  agent: conversation_agent

knowledge_task:
  description: >
    Search the knowledge directory for information about: {topic}.
    Only proceed if the query requires knowledge base information.
    Focus on finding relevant customer data and documentation.
  expected_output: >
    A detailed report of relevant information found in the knowledge base,
    formatted as markdown with clear sections and bullet points.
  agent: knowledge_agent

search_task:
  description: >
    Search the web for information about: {topic}.
    Only proceed if the query requires current or external information.
    Focus on finding accurate and up-to-date information.
  expected_output: >
    A comprehensive summary of web search results,
    formatted as markdown with clear sections and key points.
  agent: search_agent

conversation_task:
  description: >
    Based on the query analysis and any gathered information, provide a response to: "{topic}".
    If it's a normal conversation, respond naturally and engagingly.
    If it's a knowledge query, use the knowledge base results.
    If it's a web search query, use the search results.
    If it's a coding question, provide a clear technical response.
  expected_output: >
    A clear, appropriate response based on the query type and available information,
    formatted in a user-friendly way with proper markdown formatting.
  agent: conversation_agent

